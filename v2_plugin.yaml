plugins:
  ansible:
    executor: central_deployment_agent
    package_name: cloudify-ansible-plugin
    package_version: '3.1.8'
dsl_definitions:
  ansible_install_config:
    use_existing_resource: &id001
      type: boolean
      default: false
    installation_source: &id002
      type: string
      default: ansible==4.10.0
    extra_packages: &id003
      type: list
      default: []
    galaxy_collections: &id004
      type: list
      default: []
  playbook_config:
    ansible_external_venv: &id005
      type: string
      default: ''
    ansible_playbook_executable_path: &id006
      type: string
      default: ''
    extra_packages: &id007
      type: list
      default: []
    galaxy_collections: &id008
      type: list
      default: []
    roles: &id009
      type: list
      default: []
    module_path: &id010
      type: string
      default: ''
    playbook_source_path: &id011
      type: string
      default: ''
    playbook_path: &id012
      type: string
      default: ''
    site_yaml_path: &id013
      type: string
      default: ''
    additional_playbook_files: &id014
      type: list
      default: []
    sources: &id015
      type: string
      default: ''
    run_data: &id016
      default: {}
    sensitive_keys: &id017
      type: list
      default:
        - ansible_password
    options_config: &id018
      default: {}
    ansible_env_vars: &id019
      default:
        ANSIBLE_HOST_KEY_CHECKING: 'False'
        ANSIBLE_INVALID_TASK_ATTRIBUTE_FAILED: 'False'
        ANSIBLE_STDOUT_CALLBACK: json
    debug_level: &id020
      type: integer
      default: 2
    log_stdout: &id021
      type: boolean
      default: true
    additional_args: &id022
      type: string
      default: ''
    start_at_task: &id023
      type: string
      default: ''
    scp_extra_args: &id024
      type: string
      default: ''
    sftp_extra_args: &id025
      type: string
      default: ''
    ssh_common_args: &id026
      type: string
      default: ''
    ssh_extra_args: &id027
      type: string
      default: ''
    timeout: &id028
      type: string
      default: '10'
    save_playbook: &id029
      type: boolean
      default: false
    remerge_sources: &id030
      type: boolean
      default: false
    ansible_become: &id031
      type: boolean
      default: false
    tags: &id032
      type: list
      default: []
    auto_tags: &id033
      type: boolean
      default: false
    number_of_attempts: &id034
      type: integer
      default: 3
    store_facts: &id035
      type: boolean
      default: true
  playbook_inputs:
    ansible_playbook_executable_path: &id036
      default: { get_property: [SELF, ansible_playbook_executable_path] }
    extra_packages: &id037
      default: { get_property: [SELF, extra_packages] }
    galaxy_collections: &id038
      default: { get_property: [SELF, galaxy_collections] }
    roles: &id039
      default: { get_property: [SELF, roles] }
    playbook_source_path: &id040
      default: { get_property: [SELF, playbook_source_path] }
    playbook_path: &id041
      default: { get_property: [SELF, playbook_path] }
    site_yaml_path: &id042
      default: { get_property: [SELF, site_yaml_path] }
    save_playbook: &id043
      default: { get_property: [SELF, save_playbook] }
    remerge_sources: &id044
      default: { get_property: [SELF, remerge_sources] }
    sources: &id045
      default: { get_property: [SELF, sources] }
    run_data: &id046
      default: { get_property: [SELF, run_data] }
    sensitive_keys: &id047
      default: { get_property: [SELF, sensitive_keys] }
    options_config: &id048
      default: { get_property: [SELF, options_config] }
    ansible_env_vars: &id049
      default: { get_property: [SELF, ansible_env_vars] }
    debug_level: &id050
      default: { get_property: [SELF, debug_level] }
    additional_args: &id051
      default: { get_property: [SELF, additional_args] }
    start_at_task: &id052
      default: { get_property: [SELF, start_at_task] }
    scp_extra_args: &id053
      default: { get_property: [SELF, scp_extra_args] }
    sftp_extra_args: &id054
      default: { get_property: [SELF, sftp_extra_args] }
    ssh_common_args: &id055
      default: { get_property: [SELF, ssh_common_args] }
    ssh_extra_args: &id056
      default: { get_property: [SELF, ssh_extra_args] }
    timeout: &id057
      default: { get_property: [SELF, timeout] }
    tags: &id058
      default: { get_property: [SELF, tags] }
    auto_tags: &id059
      default: { get_property: [SELF, auto_tags] }
    number_of_attempts: &id060
      default: { get_property: [SELF, number_of_attempts] }
    store_facts: &id061
      default: { get_property: [SELF, store_facts] }
node_types:
  cloudify.nodes.ansible.Ansible:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing_resource: *id001
      installation_source: *id002
      extra_packages: *id003
      galaxy_collections: *id004
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: ansible.cloudify_ansible.tasks.install
        delete:
          implementation: ansible.cloudify_ansible.tasks.uninstall
      ansible:
        update_venv:
          implementation: ansible.cloudify_ansible.tasks.update_venv
          inputs:
            extra_packages:
              default: []
            galaxy_collections:
              default: []
            roles:
              default: []
  cloudify.nodes.ansible.Executor:
    derived_from: cloudify.nodes.Root
    properties:
      ansible_external_venv: *id005
      ansible_playbook_executable_path: *id006
      extra_packages: *id007
      galaxy_collections: *id008
      roles: *id009
      module_path: *id010
      playbook_source_path: *id011
      playbook_path: *id012
      site_yaml_path: *id013
      additional_playbook_files: *id014
      sources: *id015
      run_data: *id016
      sensitive_keys: *id017
      options_config: *id018
      ansible_env_vars: *id019
      debug_level: *id020
      log_stdout: *id021
      additional_args: *id022
      start_at_task: *id023
      scp_extra_args: *id024
      sftp_extra_args: *id025
      ssh_common_args: *id026
      ssh_extra_args: *id027
      timeout: *id028
      save_playbook: *id029
      remerge_sources: *id030
      ansible_become: *id031
      tags: *id032
      auto_tags: *id033
      number_of_attempts: *id034
      store_facts: *id035
    interfaces:
      cloudify.interfaces.lifecycle:
        precreate:
          implementation: ansible.cloudify_ansible.tasks.precreate
        start:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path: *id036
            extra_packages: *id037
            galaxy_collections: *id038
            roles: *id039
            playbook_source_path: *id040
            playbook_path: *id041
            site_yaml_path: *id042
            save_playbook: *id043
            remerge_sources: *id044
            sources: *id045
            run_data: *id046
            sensitive_keys: *id047
            options_config: *id048
            ansible_env_vars: *id049
            debug_level: *id050
            additional_args: *id051
            start_at_task: *id052
            scp_extra_args: *id053
            sftp_extra_args: *id054
            ssh_common_args: *id055
            ssh_extra_args: *id056
            timeout: *id057
            tags: *id058
            auto_tags: *id059
            number_of_attempts: *id060
            store_facts: *id061
        delete:
          implementation: ansible.cloudify_ansible.tasks.cleanup
      ansible:
        reload:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path: *id036
            extra_packages: *id037
            galaxy_collections: *id038
            roles: *id039
            playbook_source_path: *id040
            playbook_path: *id041
            site_yaml_path: *id042
            save_playbook: *id043
            remerge_sources: *id044
            sources: *id045
            run_data: *id046
            sensitive_keys: *id047
            options_config: *id048
            ansible_env_vars: *id049
            debug_level: *id050
            additional_args: *id051
            start_at_task: *id052
            scp_extra_args: *id053
            sftp_extra_args: *id054
            ssh_common_args: *id055
            ssh_extra_args: *id056
            timeout: *id057
            tags: *id058
            auto_tags: *id059
            number_of_attempts: *id060
            store_facts: *id061
  cloudify.nodes.ansible.Playbook:
    derived_from: cloudify.nodes.Root
    properties:
      ansible_external_venv: *id005
      ansible_playbook_executable_path: *id006
      extra_packages: *id007
      galaxy_collections: *id008
      roles: *id009
      module_path: *id010
      playbook_source_path: *id011
      playbook_path: *id012
      site_yaml_path: *id013
      additional_playbook_files: *id014
      sources: *id015
      run_data: *id016
      sensitive_keys: *id017
      options_config: *id018
      ansible_env_vars: *id019
      debug_level: *id020
      log_stdout: *id021
      additional_args: *id022
      start_at_task: *id023
      scp_extra_args: *id024
      sftp_extra_args: *id025
      ssh_common_args: *id026
      ssh_extra_args: *id027
      timeout: *id028
      save_playbook: *id029
      remerge_sources: *id030
      ansible_become: *id031
      tags: *id032
      auto_tags: *id033
      number_of_attempts: *id034
      store_facts: *id035
      kerberos_config:
        type: string
        required: false
    interfaces:
      cloudify.interfaces.lifecycle:
        precreate:
          implementation: ansible.cloudify_ansible.tasks.precreate
        configure:
          implementation: ansible.cloudify_ansible.tasks.configure
        start:
          implementation: ansible.cloudify_ansible.tasks.set_playbook_config
          inputs:
            ansible_playbook_executable_path: *id036
            extra_packages: *id037
            galaxy_collections: *id038
            roles: *id039
            playbook_source_path: *id040
            playbook_path: *id041
            site_yaml_path: *id042
            save_playbook: *id043
            remerge_sources: *id044
            sources: *id045
            run_data: *id046
            sensitive_keys: *id047
            options_config: *id048
            ansible_env_vars: *id049
            debug_level: *id050
            additional_args: *id051
            start_at_task: *id052
            scp_extra_args: *id053
            sftp_extra_args: *id054
            ssh_common_args: *id055
            ssh_extra_args: *id056
            timeout: *id057
            tags: *id058
            auto_tags: *id059
            number_of_attempts: *id060
            store_facts: *id061
        poststart:
          implementation: ansible.cloudify_ansible.tasks.store_facts
          inputs:
            ansible_playbook_executable_path: *id036
            extra_packages: *id037
            galaxy_collections: *id038
            roles: *id039
            playbook_source_path: *id040
            playbook_path: *id041
            site_yaml_path: *id042
            save_playbook: *id043
            remerge_sources: *id044
            sources: *id045
            run_data: *id046
            sensitive_keys: *id047
            options_config: *id048
            ansible_env_vars: *id049
            debug_level: *id050
            additional_args: *id051
            start_at_task: *id052
            scp_extra_args: *id053
            sftp_extra_args: *id054
            ssh_common_args: *id055
            ssh_extra_args: *id056
            timeout: *id057
            tags: *id058
            auto_tags: *id059
            number_of_attempts: *id060
            store_facts: *id061
      ansible:
        reload:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path: *id036
            extra_packages: *id037
            galaxy_collections: *id038
            roles: *id039
            playbook_source_path: *id040
            playbook_path: *id041
            site_yaml_path: *id042
            save_playbook: *id043
            remerge_sources: *id044
            sources: *id045
            run_data: *id046
            sensitive_keys: *id047
            options_config: *id048
            ansible_env_vars: *id049
            debug_level: *id050
            additional_args: *id051
            start_at_task: *id052
            scp_extra_args: *id053
            sftp_extra_args: *id054
            ssh_common_args: *id055
            ssh_extra_args: *id056
            timeout: *id057
            tags: *id058
            auto_tags: *id059
            number_of_attempts: *id060
            store_facts: *id061
relationships:
  cloudify.relationships.ansible.connected_to_host:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: ansible.cloudify_ansible.tasks.ansible_requires_host
          inputs:
            group_name:
              default: ''
            hostname:
              default: ''
            host_config:
              default: {}
        unlink:
          implementation: ansible.cloudify_ansible.tasks.ansible_remove_host
          inputs:
            group_name:
              default: ''
            hostname:
              default: ''
  cloudify.relationships.ansible.run_on_host:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path:
              default: { get_attribute: [SOURCE, ansible_playbook_executable_path] }
            extra_packages:
              default: { get_attribute: [SOURCE, extra_packages] }
            galaxy_collections:
              default: { get_attribute: [SOURCE, galaxy_collections] }
            playbook_source_path:
              default: { get_attribute: [SOURCE, playbook_source_path] }
            playbook_path:
              default: { get_attribute: [SOURCE, playbook_path] }
            site_yaml_path:
              default: { get_attribute: [SOURCE, site_yaml_path] }
            save_playbook:
              default: { get_attribute: [SOURCE, save_playbook] }
            remerge_sources:
              default: { get_attribute: [SOURCE, remerge_sources] }
            sources:
              default: { get_attribute: [SOURCE, sources] }
            run_data:
              default: { get_attribute: [SOURCE, run_data] }
            sensitive_keys:
              default: { get_attribute: [SOURCE, sensitive_keys] }
            options_config:
              default: { get_attribute: [SOURCE, options_config] }
            ansible_env_vars:
              default: { get_attribute: [SOURCE, ansible_env_vars] }
            debug_level:
              default: { get_attribute: [SOURCE, debug_level] }
            additional_args:
              default: { get_attribute: [SOURCE, additional_args] }
            start_at_task:
              default: { get_attribute: [SOURCE, start_at_task] }
            scp_extra_args:
              default: { get_attribute: [SOURCE, scp_extra_args] }
            sftp_extra_args:
              default: { get_attribute: [SOURCE, sftp_extra_args] }
            ssh_common_args:
              default: { get_attribute: [SOURCE, ssh_common_args] }
            ssh_extra_args:
              default: { get_attribute: [SOURCE, ssh_extra_args] }
            timeout:
              default: { get_attribute: [SOURCE, timeout] }
            tags:
              default: { get_attribute: [SOURCE, tags] }
            auto_tags:
              default: { get_attribute: [SOURCE, auto_tags] }
        unlink:
          implementation: ansible.cloudify_ansible.tasks.cleanup
  cloudify.ansible.relationships.connected_to_host:
    derived_from: cloudify.relationships.ansible.connected_to_host
  cloudify.ansible.relationships.run_on_host:
    derived_from: cloudify.relationships.ansible.run_on_host
workflows:
  reload_ansible_playbook:
    mapping: ansible.cloudify_ansible.workflows.reload_playbook
    availability_rules:
      node_instances_active:
        - all
        - partial
    parameters:
      ansible_external_venv: *id005
      ansible_playbook_executable_path: *id006
      extra_packages: *id007
      galaxy_collections: *id008
      roles: *id009
      module_path: *id010
      playbook_source_path: *id011
      playbook_path: *id012
      site_yaml_path: *id013
      additional_playbook_files: *id014
      sources: *id015
      run_data: *id016
      sensitive_keys: *id017
      options_config: *id018
      ansible_env_vars: *id019
      debug_level: *id020
      log_stdout: *id021
      additional_args: *id022
      start_at_task: *id023
      scp_extra_args: *id024
      sftp_extra_args: *id025
      ssh_common_args: *id026
      ssh_extra_args: *id027
      timeout: *id028
      save_playbook: *id029
      remerge_sources: *id030
      ansible_become: *id031
      tags: *id032
      auto_tags: *id033
      number_of_attempts: *id034
      store_facts: *id035
      node_instance_ids:
        type: list
        default: []
      node_ids:
        type: list
        default: []
  update_playbook_venv:
    mapping: ansible.cloudify_ansible.workflows.update_playbook_venv
    parameters:
      extra_packages:
        type: list
        default: []
      galaxy_collections:
        type: list
        default: []
      roles:
        type: list
        default: []
blueprint_labels:
  obj-type:
    values:
      - ansible
labels:
  obj-type:
    values:
      - ansible
