version: 2.1

unittest-post-steps: &unittest-post-steps
  post-steps:
    - store_test_results:
        path: /home/circleci/project/nosetests.xml
    - store_artifacts:
        path: /home/circleci/project/coverage.xml
        prefix: tests
    - slack/notify_failed

orbs:
  node: cloudify/public-unittest-orb@volatile
  wagonorb: cloudify/wagon-bulder-orb@volatile
  releaseorb: cloudify/release-orb@volatile
  managerorb: cloudify/manager-orb@volatile
  slack: cloudify/notify-slack@2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
        git submodule update --init --recursive
      fi


executors:
  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-2004:202201-02

commands:
  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-test-manager -l $TEST_LICENSE --generate-new-aws-token -es gcp_credentials=$gcp_credentials -es aws_access_key_id=$aws_access_key_id -es aws_secret_access_key=$aws_secret_access_key --yum-package python-netaddr --yum-package git --yum-package epel -p $(find ~/project/workspace/build/ -name *manylinux-py311-none-linux_x86_64.wgn*)  ~/project/plugin.yaml
      - run: ecosystem-test upload-plugin -PN aws
      - run: ecosystem-test upload-plugin -PN utilities
      - run: |
          docker exec -it cfy_manager mkdir -p /etc/cloudify/.cloudify/profiles/manager-local/
          docker exec -it cfy_manager cp /root/.cloudify/profiles/manager-local/context.json /etc/cloudify/.cloudify/profiles/manager-local/context.json

  run_hello_world_test:
    steps:
      - run: ecosystem-test local-blueprint-test -b examples/blueprint-examples/hello-world-example/aws.yaml --test-id=hello-world-example --on-failure=uninstall-force --timeout=1800 --nested-test=.circleci/test_runtime.py
      - slack/notify_failed
      
  run_python_venv_options:
    steps:
      - run: ecosystem-test local-blueprint-test -b examples/python-venv-options.yaml --test-id=python-venv-options --on-failure=uninstall-force --timeout=1800 --nested-test=.circleci/test_runtime.py

jobs:

  integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_hello_world_test

workflows:
  version: 2
  tests:
    jobs:
          # - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon
      # - wagonorb/wagon:
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master)/
      - wagonorb/wagon_311
      # - wagonorb/wagon_311:
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon
      # - wagonorb/arch64_wagon:
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon
      # - wagonorb/rhel_wagon:
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master)/
      - integration_tests_py3:
          context: 
            - slack-secrets
          <<: *unittest-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
          # filters:
          #   branches:
          #     only: /([0-9\.]*\-build|master)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - node/validate_version_job
            - node/validate_documentation_job
            - integration_tests_py3
      - releaseorb/merge_docs_job:
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job
  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,1,3,5"
        filters:
          branches:
            only:
              - master
    jobs:
          # - node/check_py3_compat_job
      - node/validate_version_job
      - node/unittests_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - integration_tests_py3:
          context: 
            - slack-secrets
          <<: *unittest-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
